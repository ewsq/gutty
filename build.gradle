allprojects {
	group 'com.doopp.gutty'
	version '1.0'

	apply plugin: 'java'
	apply plugin: 'application'
}

// 所有子项目的通用配置
subprojects {

	// JVM 版本号要求
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	// java编译的时候缺省状态下会因为中文字符而失败
	[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

	ext {
		jacksonVersion = '2.11.0'
		lombokVersion = '1.18.12'
		jedisVersion = '2.9.0'
		slf4jVersion = '1.7.30'
		junitVersion = '4.13'
		nettyVersion = '4.1.56.Final'
		guiceVersion = '4.2.3'
		jaxrsVersion = '2.1.1'
		gsonVersion = '2.8.2'
	}

	repositories {
		// mavenLocal()
		// jcenter()
		// mavenCentral()
		maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		// maven { url 'https://jitpack.io' }
	}

	dependencies {
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

	task clear(type:Delete){
		delete 'build','target'
	}

	task release(type: Copy, dependsOn: [clear, jar]) {
	}
}

project(':framework') {

	dependencies {

		// netty guice jax-rs
		compile "io.netty:netty-all:${nettyVersion}"
		compile "com.google.inject:guice:${guiceVersion}"
		compile "javax.ws.rs:javax.ws.rs-api:${jaxrsVersion}"

		// JSON
		// compile "com.google.code.gson:gson:${gsonVersion}"
		// compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
		// compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
		// compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

		// lombok
		// compileOnly "org.projectlombok:lombok:${lombokVersion}"
		// annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

		// mysql
		// compile 'com.zaxxer:HikariCP:3.4.5'
		// compile 'org.mybatis:mybatis:3.5.6'
		// compile 'org.mybatis:mybatis-guice:3.12'
		// compile 'mysql:mysql-connector-java:8.0.22'

		// redis
		// compile "redis.clients:jedis:${jedisVersion}"

		// slf4j
		compile "org.slf4j:slf4j-api:${slf4jVersion}"
		compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"

		// junit
		// testCompile "junit:junit:${junitVersion}"
	}
}

project(':demo') {

	dependencies {

		compile project(':framework')
		// junit
		testCompile "junit:junit:${junitVersion}"
	}

	jar {
		manifest {
			attributes(
					"Manifest-Version": 1.0,
					"Main-Class": "com.doopp.gutty.demo.MVCApplication",
					"Class-Path": "./",
					"Implementation-Title": "Gradle"
			)
		}
		from {
			configurations.compile.collect {
				it.isDirectory() ? it : zipTree(it)
			}
		}
	}
}
